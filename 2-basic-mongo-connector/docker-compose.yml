version: '3.5'
services:

  # using bitnami images
  kafka:
    image: docker.io/bitnami/kafka:latest
    ports:
      - 9092:9092
    networks:
      - cdc-network
    volumes:
      - ./kafka:/bitnami/kafka
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  mongodb:
    image: giangbb/mongodb-relp:1.0
    build:
      context: ../mongodb-docker
      dockerfile: Dockerfile
    restart: always
    hostname: mongodb
    ports:
      - 27017:27017
    networks:
      - cdc-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - ./mongodb/data/db:/data/db
      - ./init-inventory.sh:/usr/local/bin/init-inventory.sh

  connect:
    image: quay.io/debezium/connect:${DEBEZIUM_VERSION}
    ports:
      - 8083:8083
    networks:
      - cdc-network
    links:
      - kafka
      - mongodb
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=gbb_connect_configs
      - OFFSET_STORAGE_TOPIC=gbb_connect_offsets
      - STATUS_STORAGE_TOPIC=gbb_connect_statuses


networks:
  cdc-network:
    name: cdc